/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#include "swiss-keymap.h"

#define BASE   0
#define NAVR   1
#define SYMB   2
#define NUMR   3
#define FUNL   4
#define ADJL   5    

/ {
	behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
// /*
//  *
//  *          ,-----------------------------.                                ,-----------------------------.
//  *          | 00 | 01 | 02 | 03 | 04 | 05 |                                | 06 | 07 | 08 | 09 | 10 | 11 |
//  *          ,----+----+----+----+----+----|                                |----+----+----+----+----+----.
//  *          | 12 | 13 | 14 | 15 | 16 | 17 |                                | 18 | 19 | 20 | 21 | 22 | 23 |
//  *          |----+----+----+----+----+----|                                |----+----+----+----+----+----|
//  *          | 24 | 25 | 26 | 27 | 28 | 29 |                                | 30 | 31 | 32 | 33 | 34 | 35 |
//  *          |----+----+----+----+----+----|                                |----+----+----+----+----+----|
//  *          | 36 | 37 | 38 | 39 | 40 | 41 |                                | 42 | 43 | 44 | 45 | 46 | 47 |
//  *          `---------+----+----+----+----+----.                      ,----+----+----+----+----+---------'
//  *                    | 48 | 49 | 50 | 51 | 52 |                      | 53 | 54 | 55 | 56 | 57 |
//  *                    `------------------------'                      `------------------------'
//  */
/*
    combos {
        compatible = "zmk,combos";
    };
 */
    keymap {
        compatible = "zmk,keymap";
        base {
            label = "BASE";
            bindings = <
                &kp ESC       &kp N1           &kp N2            &kp N3        &kp N4         &kp N5                   &kp N6        &kp N7         &kp N8          &kp N9        &kp N0        &kp BSPC
                &kp TAB       &kp Q            &kp W             &kp E         &kp R          &kp T                    &kp Y         &kp U          &kp I           &kp O         &kp P         &kp DEL
                &sk LSHIFT    &kp A            &kp S             &kp D         &kp F          &kp G                    &kp H         &kp J          &kp K           &kp L         &kp K         &kp ENTER
                &caps_word    &hm LGUI Z       &hm LALT X        &hm LCTRL C   &hm LSHFT V    &hm RALT B               &hm RALT N    &hm LSHFT M    &hm LCTRL COMMA &hm LALT DOT  &hm LGUI FSLH &kp LS(LG(M))
                              &kp LG(LC(LEFT)) &kp LG(LC(RIGHT)) &mt LCTRL ESC &lt NAVR SPACE &lt NUMR TAB             &lt FUNL BSPC &lt SYMB SPACE &mt LSHIFT RET  &kp LA(LEFT)  &kp LA(RIGHT)
            >;
        };
        navr {
            label = "NAV";
            bindings = <
                &trans        &trans         &trans         &trans          &trans         &trans                   &trans         &trans          &trans         &trans         &trans         &trans
                &trans        &trans         &trans         &trans          &trans         &trans                   &trans         &kp HOME        &kp UP         &kp END        &kp PSCRN      &trans
                &trans        &trans         &trans         &trans          &trans         &trans                   &trans         &kp LEFT        &kp DOWN       &kp RIGHT      &kp DEL        &trans
                &trans        &trans         &kp LC(X)      &kp LC(C)       &kp LC(V)      &trans                   &trans         &kp PAUSE_BREAK &kp PG_DN      &kp PG_UP      &trans         &trans
                              &trans         &trans         &trans          &trans         &trans                   &kp RET        &kp SPACE       &kp BSPC       &trans         &trans 
            >;
        };
        symb {
            label = "SYM";
            bindings = <
                &trans        &trans         &trans         &trans          &trans         &trans                   &trans         &trans         &trans         &trans         &trans         &trans
                &trans        &kp CH_GRV     &kp CH_AT      &kp CH_LCBR     &kp CH_RCBR    &kp CH_DLR               &kp CH_DIAE    &kp CH_UDIA    &kp CH_SLSH    &kp CH_BSLS    &kp CH_CIRC    &trans
                &trans        &kp CH_ADIA    &kp CH_AMPR    &kp CH_LPRN     &kp CH_RPRN    &kp CH_PIPE              &kp CH_QUOT    &kp CH_DQUO    &kp CH_QUES    &kp CH_EXLM    &kp CH_PLUS    &trans
                &trans        &kp CH_PERC    &kp CH_HASH    &kp CH_LBRC     &kp CH_RBRC    &kp CH_TILD              &kp CH_EURO    &kp CH_EQL     &kp CH_ASTR    &kp CH_LABK    &kp CH_RABK    &trans
                              &trans         &trans         &trans          &kp SPACE      &kp TAB                  &trans         &trans         &trans         &trans         &trans 
            >;
        };
        numr {
            label = "NUM";
            bindings = <
                &trans        &trans         &trans         &trans          &trans         &trans                   &trans         &trans         &trans         &trans         &trans         &trans
                &trans        &trans         &trans         &trans          &trans         &trans                   &kp SLASH      &kp N7         &kp N8         &kp N9         &kp MINUS      &trans
                &trans        &trans         &trans         &trans          &trans         &trans                   &kp ASTRK      &kp N4         &kp N5         &kp N6         &kp PLUS       &trans
                &trans        &trans         &trans         &trans          &trans         &trans                   &kp N0         &kp N1         &kp N2         &kp N3         &kp DOT        &trans
                              &trans         &trans         &trans          &trans         &trans                   &lt ADJL BSPC  &kp RET        &trans         &trans         &trans 
            >;
        };
        funl {
            label = "FUN";
            bindings = <
                &trans        &trans         &trans         &trans          &trans         &trans                   &trans         &trans         &trans         &trans         &trans         &trans
                &trans        &kp F12        &kp F7         &kp F8          &kp F9         &kp PAUSE_BREAK          &trans         &trans         &trans         &trans         &trans         &trans
                &trans        &kp F11        &kp F4         &kp F5          &kp F6         &kp PSCRN                &trans         &trans         &trans         &trans         &trans         &trans
                &trans        &kp F10        &kp F1         &kp F2          &kp F3         &kp CLCK                 &trans         &trans         &trans         &trans         &trans         &trans
                              &trans         &trans         &trans          &kp SPACE      &lt ADJL TAB             &trans         &trans         &trans         &trans         &trans 
            >;
        };
        adjl {
            label = "ADJ";
            bindings = <
                &trans        &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2    &bt BT_SEL 3   &bt BT_SEL 4             &trans         &trans         &trans         &trans         &trans         &trans
                &trans        &trans         &trans         &trans          &trans         &out OUT_TOG             &trans         &trans         &trans         &trans         &trans         &trans
                &trans        &kp C_PREV     &kp C_VOL_DN   &kp C_VOL_UP    &kp C_NEXT     &trans                   &trans         &trans         &trans         &trans         &trans         &trans
                &trans        &trans         &kp K_MUTE     &kp C_PP        &bt BT_CLR     &trans                   &trans         &trans         &trans         &trans         &trans         &trans
                              &trans         &trans         &trans          &trans         &trans                   &trans         &trans         &trans         &trans         &trans 
            >;
        };
    };
};

// -------------------------------------------------------- TEMPLATE -------------------------------------------------------------------------------------
// /*
//  * Layer
//  *
//  *          ,-----------------------------------------.                                               ,-----------------------------------------.
//  *          |      |      |      |      |      |      |                                               |      |      |      |      |      |      |
//  *          |      |      |      |      |      |      |                                               |      |      |      |      |      |      |
//  *          |------+------+------+------+------+------|                                               |------+------+------+------+------+------|
//  *          |      |      |      |      |      |      |                                               |      |      |      |      |      |      |
//  *          |      |      |      |      |      |      |                                               |      |      |      |      |      |      |
//  *          |------+------+------+------+------+------|                                               |------+------+------+------+------+------|
//  *          |      |      |      |      |      |      |                                               |      |      |      |      |      |      |
//  *          |      |      |      |      |      |      |                                               |      |      |      |      |      |      |
//  *          |------+------+------+------+------+------|                                               |------+------+------+------+------+------|
//  *          |      |      |      |      |      |      |                                               |      |      |      |      |      |      |
//  *          |      |      |      |      |      |      |                                               |      |      |      |      |      |      |
//  *          `-------------+------+------+------+------+------.                                 ,------+------+------+------+------+-------------'
//  *                        |      |      |      |      |      |                                 |      |      |      |      |      |
//  *                        |      |      |      |      |      |                                 |      |      |      |      |      |
//  *                        `----------------------------------'                                 `----------------------------------'
//  */
/*
        layer {
            label = "LAYER";
            bindings = <
                &trans        &trans         &trans         &trans          &trans         &trans                   &trans         &trans         &trans         &trans         &trans         &trans
                &trans        &trans         &trans         &trans          &trans         &trans                   &trans         &trans         &trans         &trans         &trans         &trans
                &trans        &trans         &trans         &trans          &trans         &trans                   &trans         &trans         &trans         &trans         &trans         &trans
                &trans        &trans         &trans         &trans          &trans         &trans                   &trans         &trans         &trans         &trans         &trans         &trans
                              &trans         &trans         &trans          &trans         &trans                   &trans         &trans         &trans         &trans         &trans 
            >;
        };
*/